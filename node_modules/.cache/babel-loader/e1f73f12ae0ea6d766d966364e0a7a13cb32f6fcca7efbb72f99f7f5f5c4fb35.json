{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtrav\\\\Desktop\\\\my-new-app\\\\ethereal-violet-orb\\\\src\\\\components\\\\EtherealOrb\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useCanvas } from './hooks/useCanvas';\nimport { useParticles } from './hooks/useParticles';\nimport { useWhispers } from './hooks/useWhispers';\nimport { drawBackground, drawOrb, drawHeroText } from './utils/drawing';\nimport { handleMouseMove, handleClick } from './utils/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EtherealOrb = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isSplit, setIsSplit] = useState(false);\n  const [splitProgress, setSplitProgress] = useState(0);\n  const [leftChatMessage, setLeftChatMessage] = useState('');\n  const [userMessage, setUserMessage] = useState('');\n  const [heroTextOpacity, setHeroTextOpacity] = useState(1);\n  const {\n    width,\n    height\n  } = useCanvas(canvasRef);\n  const {\n    particles,\n    addParticle,\n    updateParticles,\n    drawParticles\n  } = useParticles();\n  const {\n    whispers,\n    updateWhispers,\n    drawWhispers\n  } = useWhispers();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    function animate(time) {\n      ctx.clearRect(0, 0, width, height);\n      drawBackground(ctx, width, height);\n      drawOrb(ctx, width, height, time / 1000, splitProgress, leftChatMessage, userMessage);\n      drawHeroText(ctx, width, height, heroTextOpacity);\n      updateParticles();\n      drawParticles(ctx);\n      updateWhispers();\n      drawWhispers(ctx, width, height);\n      if (isSplit && splitProgress < 1) {\n        setSplitProgress(prev => Math.min(prev + 0.0002, 1));\n        setHeroTextOpacity(prev => Math.max(prev - 0.0002, 0));\n      } else if (!isSplit && splitProgress > 0) {\n        setSplitProgress(prev => Math.max(prev - 0.0002, 0));\n      }\n      requestAnimationFrame(animate);\n    }\n    const handleMouseMoveEvent = event => handleMouseMove(event, width, height, addParticle, whispers);\n    const handleClickEvent = event => {\n      handleClick(event, width, height, setIsSplit, setLeftChatMessage);\n      if (!isSplit) {\n        setHeroTextOpacity(1); // Reset opacity when returning to initial state\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMoveEvent);\n    canvas.addEventListener('click', handleClickEvent);\n    requestAnimationFrame(animate);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMoveEvent);\n      canvas.removeEventListener('click', handleClickEvent);\n    };\n  }, [width, height, isSplit, splitProgress, leftChatMessage, userMessage, heroTextOpacity, addParticle, particles, whispers, updateParticles, drawParticles, updateWhispers, drawWhispers]);\n  const handleUserInput = event => {\n    setUserMessage(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isSplit && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userMessage,\n      onChange: handleUserInput,\n      placeholder: \"Type your message...\",\n      style: {\n        position: 'absolute',\n        bottom: '20px',\n        right: '20px',\n        width: '200px',\n        padding: '10px',\n        borderRadius: '20px',\n        border: 'none',\n        backgroundColor: 'rgba(255, 255, 255, 0.8)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(EtherealOrb, \"7BGpRp6lJ1yHsl0NRRQnpHYeODs=\", false, function () {\n  return [useCanvas, useParticles, useWhispers];\n});\n_c = EtherealOrb;\nexport default EtherealOrb;\nvar _c;\n$RefreshReg$(_c, \"EtherealOrb\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCanvas","useParticles","useWhispers","drawBackground","drawOrb","drawHeroText","handleMouseMove","handleClick","jsxDEV","_jsxDEV","EtherealOrb","_s","canvasRef","isSplit","setIsSplit","splitProgress","setSplitProgress","leftChatMessage","setLeftChatMessage","userMessage","setUserMessage","heroTextOpacity","setHeroTextOpacity","width","height","particles","addParticle","updateParticles","drawParticles","whispers","updateWhispers","drawWhispers","canvas","current","ctx","getContext","animate","time","clearRect","prev","Math","min","max","requestAnimationFrame","handleMouseMoveEvent","event","handleClickEvent","addEventListener","removeEventListener","handleUserInput","target","value","style","position","children","ref","display","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","bottom","right","padding","borderRadius","border","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/vtrav/Desktop/my-new-app/ethereal-violet-orb/src/components/EtherealOrb/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useCanvas } from './hooks/useCanvas';\r\nimport { useParticles } from './hooks/useParticles';\r\nimport { useWhispers } from './hooks/useWhispers';\r\nimport { drawBackground, drawOrb, drawHeroText } from './utils/drawing';\r\nimport { handleMouseMove, handleClick } from './utils/interaction';\r\n\r\nconst EtherealOrb = () => {\r\n  const canvasRef = useRef(null);\r\n  const [isSplit, setIsSplit] = useState(false);\r\n  const [splitProgress, setSplitProgress] = useState(0);\r\n  const [leftChatMessage, setLeftChatMessage] = useState('');\r\n  const [userMessage, setUserMessage] = useState('');\r\n  const [heroTextOpacity, setHeroTextOpacity] = useState(1);\r\n\r\n  const { width, height } = useCanvas(canvasRef);\r\n  const { particles, addParticle, updateParticles, drawParticles } = useParticles();\r\n  const { whispers, updateWhispers, drawWhispers } = useWhispers();\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    function animate(time) {\r\n      ctx.clearRect(0, 0, width, height);\r\n      drawBackground(ctx, width, height);\r\n      drawOrb(ctx, width, height, time / 1000, splitProgress, leftChatMessage, userMessage);\r\n      drawHeroText(ctx, width, height, heroTextOpacity);\r\n      updateParticles();\r\n      drawParticles(ctx);\r\n      updateWhispers();\r\n      drawWhispers(ctx, width, height);\r\n\r\n      if (isSplit && splitProgress < 1) {\r\n        setSplitProgress(prev => Math.min(prev + 0.0002, 1));\r\n        setHeroTextOpacity(prev => Math.max(prev - 0.0002, 0));\r\n      } else if (!isSplit && splitProgress > 0) {\r\n        setSplitProgress(prev => Math.max(prev - 0.0002, 0));\r\n      }\r\n\r\n      requestAnimationFrame(animate);\r\n    }\r\n\r\n    const handleMouseMoveEvent = (event) => handleMouseMove(event, width, height, addParticle, whispers);\r\n    const handleClickEvent = (event) => {\r\n      handleClick(event, width, height, setIsSplit, setLeftChatMessage);\r\n      if (!isSplit) {\r\n        setHeroTextOpacity(1); // Reset opacity when returning to initial state\r\n      }\r\n    };\r\n\r\n    canvas.addEventListener('mousemove', handleMouseMoveEvent);\r\n    canvas.addEventListener('click', handleClickEvent);\r\n\r\n    requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('mousemove', handleMouseMoveEvent);\r\n      canvas.removeEventListener('click', handleClickEvent);\r\n    };\r\n  }, [width, height, isSplit, splitProgress, leftChatMessage, userMessage, heroTextOpacity, addParticle, particles, whispers, updateParticles, drawParticles, updateWhispers, drawWhispers]);\r\n\r\n  const handleUserInput = (event) => {\r\n    setUserMessage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100%', height: '100%' }}>\r\n      <canvas ref={canvasRef} style={{ width: '100%', height: '100%', display: 'block' }} />\r\n      {isSplit && (\r\n        <input\r\n          type=\"text\"\r\n          value={userMessage}\r\n          onChange={handleUserInput}\r\n          placeholder=\"Type your message...\"\r\n          style={{\r\n            position: 'absolute',\r\n            bottom: '20px',\r\n            right: '20px',\r\n            width: '200px',\r\n            padding: '10px',\r\n            borderRadius: '20px',\r\n            border: 'none',\r\n            backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EtherealOrb;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}