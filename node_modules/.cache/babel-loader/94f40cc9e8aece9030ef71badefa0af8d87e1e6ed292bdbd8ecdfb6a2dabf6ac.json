{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtrav\\\\Desktop\\\\my-new-app\\\\ethereal-violet-orb\\\\src\\\\EtherealOrb.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EtherealOrb = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const particles = useRef([]);\n  const whispers = useRef([]);\n  const orbRadius = 100;\n  const [isSplit, setIsSplit] = useState(false);\n  const [splitProgress, setSplitProgress] = useState(0);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let width, height;\n    const greetings = ['Hey...', 'Welcome...', 'Hello...', 'Hi there...', 'Greetings...'];\n    function resizeCanvas() {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      canvas.width = width;\n      canvas.height = height;\n    }\n    function createGradient() {\n      const gradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, Math.max(width, height) / 2);\n      gradient.addColorStop(0, '#ffffff');\n      gradient.addColorStop(0.7, '#f0f0f0');\n      gradient.addColorStop(1, '#e0e0e0');\n      return gradient;\n    }\n    function drawBackground() {\n      ctx.fillStyle = createGradient();\n      ctx.fillRect(0, 0, width, height);\n    }\n    function drawOrb(t) {\n      if (isSplit) {\n        drawSplitOrb(t);\n      } else {\n        drawWholeOrb(t);\n      }\n    }\n    function drawWholeOrb(t) {\n      ctx.save();\n      ctx.translate(width / 2, height / 2);\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\n      gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\n      gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\n      gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\n      gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\n      ctx.beginPath();\n      for (let i = 0; i < 360; i += 5) {\n        const angle = i * Math.PI / 180;\n        const noise = Math.sin(i * 0.05 + t) * 4;\n        const r = orbRadius + noise;\n        const x = Math.cos(angle) * r;\n        const y = Math.sin(angle) * r;\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.fillStyle = gradient;\n      ctx.globalAlpha = 0.6;\n      ctx.fill();\n      ctx.restore();\n    }\n    function drawSplitOrb(t) {\n      ctx.save();\n      ctx.translate(width / 2, height / 2);\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\n      gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\n      gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\n      gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\n      gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\n      const leftX = -width / 2 * splitProgress;\n      const rightX = width / 2 * splitProgress;\n\n      // Left half\n      ctx.beginPath();\n      for (let i = 90; i <= 270; i += 5) {\n        const angle = i * Math.PI / 180;\n        const noise = Math.sin(i * 0.05 + t) * 4;\n        const r = orbRadius + noise;\n        const x = Math.cos(angle) * r + leftX;\n        const y = Math.sin(angle) * r;\n        if (i === 90) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.fillStyle = gradient;\n      ctx.globalAlpha = 0.6;\n      ctx.fill();\n\n      // Right half\n      ctx.beginPath();\n      for (let i = 270; i <= 450; i += 5) {\n        const angle = i * Math.PI / 180;\n        const noise = Math.sin(i * 0.05 + t) * 4;\n        const r = orbRadius + noise;\n        const x = Math.cos(angle) * r + rightX;\n        const y = Math.sin(angle) * r;\n        if (i === 270) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.fillStyle = gradient;\n      ctx.globalAlpha = 0.6;\n      ctx.fill();\n\n      // Draw chat bubbles\n      if (splitProgress > 0.5) {\n        const bubbleOpacity = (splitProgress - 0.5) * 2;\n        ctx.globalAlpha = bubbleOpacity;\n\n        // Left chat bubble\n        ctx.beginPath();\n        ctx.arc(leftX - orbRadius * 1.5, 0, orbRadius * 0.8, 0, Math.PI * 2);\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n        ctx.fill();\n        ctx.strokeStyle = 'rgba(126, 34, 206, 0.6)';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Right chat bubble\n        ctx.beginPath();\n        ctx.arc(rightX + orbRadius * 1.5, 0, orbRadius * 0.8, 0, Math.PI * 2);\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n        ctx.fill();\n        ctx.strokeStyle = 'rgba(126, 34, 206, 0.6)';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n    function updateParticles() {\n      particles.current = particles.current.filter(p => p.opacity > 0 && p.size > 0);\n      particles.current.forEach(p => {\n        p.x += p.vx;\n        p.y += p.vy;\n        p.opacity -= 0.01;\n        p.size = Math.max(0, p.size - 0.05);\n      });\n    }\n    function drawParticles() {\n      particles.current.forEach(p => {\n        if (p.size > 0) {\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\n          ctx.fillStyle = `rgba(126, 34, 206, ${p.opacity})`;\n          ctx.fill();\n        }\n      });\n    }\n    function updateWhispers() {\n      const now = Date.now();\n      whispers.current = whispers.current.filter(w => w.opacity > 0 || now - w.createdAt < 12000);\n      whispers.current.forEach(w => {\n        const age = now - w.createdAt;\n        if (age < 5000) {\n          w.opacity = age / 5000; // Fade in over 5 seconds\n        } else if (age > 7000) {\n          w.opacity = Math.max(0, 0.2 - (age - 7000) / 5000); // Fade out after 7 seconds\n        } else {\n          w.opacity = 0.2; // Full opacity\n        }\n      });\n    }\n    function drawWhispers() {\n      ctx.font = 'bold 24px \"Orbitron\"';\n      ctx.textAlign = 'center';\n      whispers.current.forEach(w => {\n        ctx.fillStyle = `rgba(0, 0, 0, ${w.opacity})`;\n        ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 2;\n        ctx.shadowBlur = 3;\n        ctx.fillText(w.text, w.x, w.y);\n        ctx.shadowColor = 'transparent';\n      });\n    }\n    function animate(time) {\n      ctx.clearRect(0, 0, width, height);\n      drawBackground();\n      drawOrb(time / 1000);\n      updateParticles();\n      drawParticles();\n      updateWhispers();\n      drawWhispers();\n      if (isSplit && splitProgress < 1) {\n        setSplitProgress(prev => Math.min(prev + 0.0001, 1));\n      } else if (!isSplit && splitProgress > 0) {\n        setSplitProgress(prev => Math.max(prev - 0.0001, 0));\n      }\n      requestAnimationFrame(animate);\n    }\n    function handleMouseMove(event) {\n      const x = event.clientX;\n      const y = event.clientY;\n      const dx = x - width / 2;\n      const dy = y - height / 2;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < orbRadius) {\n        if (Math.random() < 0.02) {\n          whispers.current.push({\n            text: greetings[Math.floor(Math.random() * greetings.length)],\n            x: width / 2 + Math.random() * 200 - 100,\n            y: height / 2 + Math.random() * 200 - 100,\n            opacity: 0,\n            createdAt: Date.now()\n          });\n        }\n      }\n      if (Math.random() < 0.3) {\n        const angle = Math.random() * 2 * Math.PI;\n        const speed = 0.5 + Math.random() * 1;\n        particles.current.push({\n          x,\n          y,\n          vx: Math.cos(angle) * speed,\n          vy: Math.sin(angle) * speed,\n          opacity: 0.5,\n          size: 1 + Math.random() * 2\n        });\n      }\n    }\n    function handleClick(event) {\n      const x = event.clientX;\n      const y = event.clientY;\n      const dx = x - width / 2;\n      const dy = y - height / 2;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < orbRadius) {\n        setIsSplit(prev => !prev);\n      }\n    }\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleClick);\n    requestAnimationFrame(animate);\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleClick);\n    };\n  }, [isSplit, splitProgress]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      display: 'block'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 10\n  }, this);\n};\n_s(EtherealOrb, \"4n0x+prIL8KiH69qSBHsP6f82gc=\");\n_c = EtherealOrb;\nexport default EtherealOrb;\nvar _c;\n$RefreshReg$(_c, \"EtherealOrb\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","EtherealOrb","_s","canvasRef","particles","whispers","orbRadius","isSplit","setIsSplit","splitProgress","setSplitProgress","canvas","current","ctx","getContext","width","height","greetings","resizeCanvas","window","innerWidth","innerHeight","createGradient","gradient","createRadialGradient","Math","max","addColorStop","drawBackground","fillStyle","fillRect","drawOrb","t","drawSplitOrb","drawWholeOrb","save","translate","beginPath","i","angle","PI","noise","sin","r","x","cos","y","moveTo","lineTo","closePath","globalAlpha","fill","restore","leftX","rightX","bubbleOpacity","arc","strokeStyle","lineWidth","stroke","updateParticles","filter","p","opacity","size","forEach","vx","vy","drawParticles","updateWhispers","now","Date","w","createdAt","age","drawWhispers","font","textAlign","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","fillText","text","animate","time","clearRect","prev","min","requestAnimationFrame","handleMouseMove","event","clientX","clientY","dx","dy","distance","sqrt","random","push","floor","length","speed","handleClick","addEventListener","removeEventListener","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vtrav/Desktop/my-new-app/ethereal-violet-orb/src/EtherealOrb.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\n\r\nconst EtherealOrb = () => {\r\n  const canvasRef = useRef(null);\r\n  const particles = useRef([]);\r\n  const whispers = useRef([]);\r\n  const orbRadius = 100;\r\n  const [isSplit, setIsSplit] = useState(false);\r\n  const [splitProgress, setSplitProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let width, height;\r\n\r\n    const greetings = [\r\n      'Hey...',\r\n      'Welcome...',\r\n      'Hello...',\r\n      'Hi there...',\r\n      'Greetings...',\r\n    ];\r\n\r\n    function resizeCanvas() {\r\n      width = window.innerWidth;\r\n      height = window.innerHeight;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n    }\r\n\r\n    function createGradient() {\r\n      const gradient = ctx.createRadialGradient(\r\n        width / 2,\r\n        height / 2,\r\n        0,\r\n        width / 2,\r\n        height / 2,\r\n        Math.max(width, height) / 2\r\n      );\r\n      gradient.addColorStop(0, '#ffffff');\r\n      gradient.addColorStop(0.7, '#f0f0f0');\r\n      gradient.addColorStop(1, '#e0e0e0');\r\n      return gradient;\r\n    }\r\n\r\n    function drawBackground() {\r\n      ctx.fillStyle = createGradient();\r\n      ctx.fillRect(0, 0, width, height);\r\n    }\r\n\r\n    function drawOrb(t) {\r\n      if (isSplit) {\r\n        drawSplitOrb(t);\r\n      } else {\r\n        drawWholeOrb(t);\r\n      }\r\n    }\r\n\r\n    function drawWholeOrb(t) {\r\n      ctx.save();\r\n      ctx.translate(width / 2, height / 2);\r\n\r\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\r\n      gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\r\n      gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\r\n      gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\r\n      gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\r\n\r\n      ctx.beginPath();\r\n      for (let i = 0; i < 360; i += 5) {\r\n        const angle = (i * Math.PI) / 180;\r\n        const noise = Math.sin(i * 0.05 + t) * 4;\r\n        const r = orbRadius + noise;\r\n        const x = Math.cos(angle) * r;\r\n        const y = Math.sin(angle) * r;\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      }\r\n      ctx.closePath();\r\n\r\n      ctx.fillStyle = gradient;\r\n      ctx.globalAlpha = 0.6;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n\r\n    function drawSplitOrb(t) {\r\n      ctx.save();\r\n      ctx.translate(width / 2, height / 2);\r\n\r\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\r\n      gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\r\n      gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\r\n      gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\r\n      gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\r\n\r\n      const leftX = -width / 2 * splitProgress;\r\n      const rightX = width / 2 * splitProgress;\r\n\r\n      // Left half\r\n      ctx.beginPath();\r\n      for (let i = 90; i <= 270; i += 5) {\r\n        const angle = (i * Math.PI) / 180;\r\n        const noise = Math.sin(i * 0.05 + t) * 4;\r\n        const r = orbRadius + noise;\r\n        const x = Math.cos(angle) * r + leftX;\r\n        const y = Math.sin(angle) * r;\r\n        if (i === 90) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fillStyle = gradient;\r\n      ctx.globalAlpha = 0.6;\r\n      ctx.fill();\r\n\r\n      // Right half\r\n      ctx.beginPath();\r\n      for (let i = 270; i <= 450; i += 5) {\r\n        const angle = (i * Math.PI) / 180;\r\n        const noise = Math.sin(i * 0.05 + t) * 4;\r\n        const r = orbRadius + noise;\r\n        const x = Math.cos(angle) * r + rightX;\r\n        const y = Math.sin(angle) * r;\r\n        if (i === 270) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fillStyle = gradient;\r\n      ctx.globalAlpha = 0.6;\r\n      ctx.fill();\r\n\r\n      // Draw chat bubbles\r\n      if (splitProgress > 0.5) {\r\n        const bubbleOpacity = (splitProgress - 0.5) * 2;\r\n        ctx.globalAlpha = bubbleOpacity;\r\n        \r\n        // Left chat bubble\r\n        ctx.beginPath();\r\n        ctx.arc(leftX - orbRadius * 1.5, 0, orbRadius * 0.8, 0, Math.PI * 2);\r\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\r\n        ctx.fill();\r\n        ctx.strokeStyle = 'rgba(126, 34, 206, 0.6)';\r\n        ctx.lineWidth = 2;\r\n        ctx.stroke();\r\n\r\n        // Right chat bubble\r\n        ctx.beginPath();\r\n        ctx.arc(rightX + orbRadius * 1.5, 0, orbRadius * 0.8, 0, Math.PI * 2);\r\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\r\n        ctx.fill();\r\n        ctx.strokeStyle = 'rgba(126, 34, 206, 0.6)';\r\n        ctx.lineWidth = 2;\r\n        ctx.stroke();\r\n      }\r\n\r\n      ctx.restore();\r\n    }\r\n\r\n    function updateParticles() {\r\n      particles.current = particles.current.filter((p) => p.opacity > 0 && p.size > 0);\r\n      particles.current.forEach((p) => {\r\n        p.x += p.vx;\r\n        p.y += p.vy;\r\n        p.opacity -= 0.01;\r\n        p.size = Math.max(0, p.size - 0.05);\r\n      });\r\n    }\r\n\r\n    function drawParticles() {\r\n      particles.current.forEach((p) => {\r\n        if (p.size > 0) {\r\n          ctx.beginPath();\r\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\r\n          ctx.fillStyle = `rgba(126, 34, 206, ${p.opacity})`;\r\n          ctx.fill();\r\n        }\r\n      });\r\n    }\r\n\r\n    function updateWhispers() {\r\n      const now = Date.now();\r\n      whispers.current = whispers.current.filter((w) => w.opacity > 0 || (now - w.createdAt) < 12000);\r\n      whispers.current.forEach((w) => {\r\n        const age = now - w.createdAt;\r\n        if (age < 5000) {\r\n          w.opacity = age / 5000; // Fade in over 5 seconds\r\n        } else if (age > 7000) {\r\n          w.opacity = Math.max(0, 0.2 - (age - 7000) / 5000); // Fade out after 7 seconds\r\n        } else {\r\n          w.opacity = 0.2; // Full opacity\r\n        }\r\n      });\r\n    }\r\n\r\n    function drawWhispers() {\r\n      ctx.font = 'bold 24px \"Orbitron\"';\r\n      ctx.textAlign = 'center';\r\n      whispers.current.forEach((w) => {\r\n        ctx.fillStyle = `rgba(0, 0, 0, ${w.opacity})`;\r\n        ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\r\n        ctx.shadowOffsetX = 2;\r\n        ctx.shadowOffsetY = 2;\r\n        ctx.shadowBlur = 3;\r\n        ctx.fillText(w.text, w.x, w.y);\r\n        ctx.shadowColor = 'transparent';\r\n      });\r\n    }\r\n\r\n    function animate(time) {\r\n      ctx.clearRect(0, 0, width, height);\r\n      drawBackground();\r\n      drawOrb(time / 1000);\r\n      updateParticles();\r\n      drawParticles();\r\n      updateWhispers();\r\n      drawWhispers();\r\n\r\n      if (isSplit && splitProgress < 1) {\r\n        setSplitProgress(prev => Math.min(prev + 0.0001, 1));\r\n      } else if (!isSplit && splitProgress > 0) {\r\n        setSplitProgress(prev => Math.max(prev - 0.0001, 0));\r\n      }\r\n\r\n      requestAnimationFrame(animate);\r\n    }\r\n\r\n    function handleMouseMove(event) {\r\n      const x = event.clientX;\r\n      const y = event.clientY;\r\n\r\n      const dx = x - width / 2;\r\n      const dy = y - height / 2;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      if (distance < orbRadius) {\r\n        if (Math.random() < 0.02) {\r\n          whispers.current.push({\r\n            text: greetings[Math.floor(Math.random() * greetings.length)],\r\n            x: width / 2 + Math.random() * 200 - 100,\r\n            y: height / 2 + Math.random() * 200 - 100,\r\n            opacity: 0,\r\n            createdAt: Date.now(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (Math.random() < 0.3) {\r\n        const angle = Math.random() * 2 * Math.PI;\r\n        const speed = 0.5 + Math.random() * 1;\r\n        particles.current.push({\r\n          x,\r\n          y,\r\n          vx: Math.cos(angle) * speed,\r\n          vy: Math.sin(angle) * speed,\r\n          opacity: 0.5,\r\n          size: 1 + Math.random() * 2,\r\n        });\r\n      }\r\n    }\r\n\r\n    function handleClick(event) {\r\n      const x = event.clientX;\r\n      const y = event.clientY;\r\n      const dx = x - width / 2;\r\n      const dy = y - height / 2;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      if (distance < orbRadius) {\r\n        setIsSplit(prev => !prev);\r\n      }\r\n    }\r\n\r\n    resizeCanvas();\r\n    window.addEventListener('resize', resizeCanvas);\r\n    canvas.addEventListener('mousemove', handleMouseMove);\r\n    canvas.addEventListener('click', handleClick);\r\n\r\n    requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeCanvas);\r\n      canvas.removeEventListener('mousemove', handleMouseMove);\r\n      canvas.removeEventListener('click', handleClick);\r\n    };\r\n  }, [isSplit, splitProgress]);\r\n\r\n  return <canvas ref={canvasRef} style={{ width: '100%', height: '100%', display: 'block' }} />;\r\n};\r\n\r\nexport default EtherealOrb;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}