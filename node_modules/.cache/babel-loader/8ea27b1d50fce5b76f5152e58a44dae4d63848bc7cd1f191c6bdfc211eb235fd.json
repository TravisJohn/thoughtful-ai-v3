{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useCallback } from 'react';\nconst greetings = ['Hey there!', 'Welcome, friend!', 'Hello, how are you?', 'Hi! Nice to meet you.', 'Greetings, earthling!'];\nexport const useWhispers = () => {\n  _s();\n  const whispers = useRef([]);\n  const addWhisper = useCallback((x, y) => {\n    whispers.current.push({\n      text: greetings[Math.floor(Math.random() * greetings.length)],\n      x,\n      y,\n      opacity: 0,\n      createdAt: Date.now()\n    });\n  }, []);\n  const updateWhispers = useCallback(() => {\n    const now = Date.now();\n    whispers.current = whispers.current.filter(w => w.opacity > 0 || now - w.createdAt < 12000);\n    whispers.current.forEach(w => {\n      const age = now - w.createdAt;\n      if (age < 5000) {\n        w.opacity = age / 5000;\n      } else if (age > 7000) {\n        w.opacity = Math.max(0, 0.2 - (age - 7000) / 5000);\n      } else {\n        w.opacity = 0.2;\n      }\n    });\n  }, []);\n  const drawWhispers = useCallback((ctx, width, height) => {\n    ctx.font = 'bold 24px \"Orbitron\"';\n    ctx.textAlign = 'center';\n    whispers.current.forEach(w => {\n      ctx.fillStyle = `rgba(0, 0, 0, ${w.opacity})`;\n      ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\n      ctx.shadowOffsetX = 2;\n      ctx.shadowOffsetY = 2;\n      ctx.shadowBlur = 3;\n      ctx.fillText(w.text, w.x, w.y);\n      ctx.shadowColor = 'transparent';\n    });\n  }, []);\n  return {\n    whispers: whispers.current,\n    addWhisper,\n    updateWhispers,\n    drawWhispers\n  };\n};\n_s(useWhispers, \"bfsR8QM5D0FIvOuOhnPIZrIo0c8=\");","map":{"version":3,"names":["useRef","useCallback","greetings","useWhispers","_s","whispers","addWhisper","x","y","current","push","text","Math","floor","random","length","opacity","createdAt","Date","now","updateWhispers","filter","w","forEach","age","max","drawWhispers","ctx","width","height","font","textAlign","fillStyle","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","fillText"],"sources":["C:/Users/vtrav/Desktop/my-new-app/ethereal-violet-orb/src/components/EtherealOrb/hooks/useWhispers.js"],"sourcesContent":["import { useRef, useCallback } from 'react';\r\n\r\nconst greetings = [\r\n  'Hey there!',\r\n  'Welcome, friend!',\r\n  'Hello, how are you?',\r\n  'Hi! Nice to meet you.',\r\n  'Greetings, earthling!',\r\n];\r\n\r\nexport const useWhispers = () => {\r\n  const whispers = useRef([]);\r\n\r\n  const addWhisper = useCallback((x, y) => {\r\n    whispers.current.push({\r\n      text: greetings[Math.floor(Math.random() * greetings.length)],\r\n      x,\r\n      y,\r\n      opacity: 0,\r\n      createdAt: Date.now(),\r\n    });\r\n  }, []);\r\n\r\n  const updateWhispers = useCallback(() => {\r\n    const now = Date.now();\r\n    whispers.current = whispers.current.filter((w) => w.opacity > 0 || (now - w.createdAt) < 12000);\r\n    whispers.current.forEach((w) => {\r\n      const age = now - w.createdAt;\r\n      if (age < 5000) {\r\n        w.opacity = age / 5000;\r\n      } else if (age > 7000) {\r\n        w.opacity = Math.max(0, 0.2 - (age - 7000) / 5000);\r\n      } else {\r\n        w.opacity = 0.2;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const drawWhispers = useCallback((ctx, width, height) => {\r\n    ctx.font = 'bold 24px \"Orbitron\"';\r\n    ctx.textAlign = 'center';\r\n    whispers.current.forEach((w) => {\r\n      ctx.fillStyle = `rgba(0, 0, 0, ${w.opacity})`;\r\n      ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\r\n      ctx.shadowOffsetX = 2;\r\n      ctx.shadowOffsetY = 2;\r\n      ctx.shadowBlur = 3;\r\n      ctx.fillText(w.text, w.x, w.y);\r\n      ctx.shadowColor = 'transparent';\r\n    });\r\n  }, []);\r\n\r\n  return { whispers: whispers.current, addWhisper, updateWhispers, drawWhispers };\r\n};"],"mappings":";AAAA,SAASA,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAE3C,MAAMC,SAAS,GAAG,CAChB,YAAY,EACZ,kBAAkB,EAClB,qBAAqB,EACrB,uBAAuB,EACvB,uBAAuB,CACxB;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGL,MAAM,CAAC,EAAE,CAAC;EAE3B,MAAMM,UAAU,GAAGL,WAAW,CAAC,CAACM,CAAC,EAAEC,CAAC,KAAK;IACvCH,QAAQ,CAACI,OAAO,CAACC,IAAI,CAAC;MACpBC,IAAI,EAAET,SAAS,CAACU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,SAAS,CAACa,MAAM,CAAC,CAAC;MAC7DR,CAAC;MACDC,CAAC;MACDQ,OAAO,EAAE,CAAC;MACVC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGnB,WAAW,CAAC,MAAM;IACvC,MAAMkB,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IACtBd,QAAQ,CAACI,OAAO,GAAGJ,QAAQ,CAACI,OAAO,CAACY,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACN,OAAO,GAAG,CAAC,IAAKG,GAAG,GAAGG,CAAC,CAACL,SAAS,GAAI,KAAK,CAAC;IAC/FZ,QAAQ,CAACI,OAAO,CAACc,OAAO,CAAED,CAAC,IAAK;MAC9B,MAAME,GAAG,GAAGL,GAAG,GAAGG,CAAC,CAACL,SAAS;MAC7B,IAAIO,GAAG,GAAG,IAAI,EAAE;QACdF,CAAC,CAACN,OAAO,GAAGQ,GAAG,GAAG,IAAI;MACxB,CAAC,MAAM,IAAIA,GAAG,GAAG,IAAI,EAAE;QACrBF,CAAC,CAACN,OAAO,GAAGJ,IAAI,CAACa,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAACD,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC;MACpD,CAAC,MAAM;QACLF,CAAC,CAACN,OAAO,GAAG,GAAG;MACjB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,YAAY,GAAGzB,WAAW,CAAC,CAAC0B,GAAG,EAAEC,KAAK,EAAEC,MAAM,KAAK;IACvDF,GAAG,CAACG,IAAI,GAAG,sBAAsB;IACjCH,GAAG,CAACI,SAAS,GAAG,QAAQ;IACxB1B,QAAQ,CAACI,OAAO,CAACc,OAAO,CAAED,CAAC,IAAK;MAC9BK,GAAG,CAACK,SAAS,GAAG,iBAAiBV,CAAC,CAACN,OAAO,GAAG;MAC7CW,GAAG,CAACM,WAAW,GAAG,0BAA0B;MAC5CN,GAAG,CAACO,aAAa,GAAG,CAAC;MACrBP,GAAG,CAACQ,aAAa,GAAG,CAAC;MACrBR,GAAG,CAACS,UAAU,GAAG,CAAC;MAClBT,GAAG,CAACU,QAAQ,CAACf,CAAC,CAACX,IAAI,EAAEW,CAAC,CAACf,CAAC,EAAEe,CAAC,CAACd,CAAC,CAAC;MAC9BmB,GAAG,CAACM,WAAW,GAAG,aAAa;IACjC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAE5B,QAAQ,EAAEA,QAAQ,CAACI,OAAO;IAAEH,UAAU;IAAEc,cAAc;IAAEM;EAAa,CAAC;AACjF,CAAC;AAACtB,EAAA,CA3CWD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}