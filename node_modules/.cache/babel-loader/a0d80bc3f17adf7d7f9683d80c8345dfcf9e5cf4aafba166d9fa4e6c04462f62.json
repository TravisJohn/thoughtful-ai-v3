{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtrav\\\\Desktop\\\\my-new-app\\\\ethereal-violet-orb\\\\src\\\\EtherealOrb.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EtherealOrb = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const particles = useRef([]);\n  const whispers = useRef([]);\n  const [isSplit, setIsSplit] = useState(false);\n  const [splitProgress, setSplitProgress] = useState(0);\n  const [leftChatMessage, setLeftChatMessage] = useState('');\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let width, height;\n    const orbRadius = 100;\n    const greetings = ['Hey there!', 'Welcome, friend!', 'Hello, how are you?', 'Hi! Nice to meet you.', 'Greetings, earthling!'];\n    function resizeCanvas() {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      canvas.width = width;\n      canvas.height = height;\n    }\n    function createGradient() {\n      const gradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, Math.max(width, height) / 2);\n      gradient.addColorStop(0, '#ffffff');\n      gradient.addColorStop(0.7, '#f0f0f0');\n      gradient.addColorStop(1, '#e0e0e0');\n      return gradient;\n    }\n    function drawBackground() {\n      ctx.fillStyle = createGradient();\n      ctx.fillRect(0, 0, width, height);\n    }\n    function drawOrb(t) {\n      if (splitProgress > 0) {\n        drawSplitOrb(t);\n      } else {\n        drawWholeOrb(t);\n      }\n    }\n    function drawWholeOrb(t) {\n      ctx.save();\n      ctx.translate(width / 2, height / 2);\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\n      gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\n      gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\n      gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\n      gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\n      ctx.beginPath();\n      for (let i = 0; i < 360; i += 5) {\n        const angle = i * Math.PI / 180;\n        const noise = Math.sin(i * 0.05 + t) * 4;\n        const r = orbRadius + noise;\n        const x = Math.cos(angle) * r;\n        const y = Math.sin(angle) * r;\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      }\n      ctx.closePath();\n      ctx.fillStyle = gradient;\n      ctx.globalAlpha = 0.6;\n      ctx.fill();\n      ctx.restore();\n    }\n    function drawSplitOrb(t) {\n      ctx.save();\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\n      gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\n      gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\n      gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\n      gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\n      const bubbleWidth = width * 0.3;\n      const bubbleHeight = height * 0.2;\n\n      // Left chat bubble\n      const leftX = lerp(width / 2, bubbleWidth / 2 + 20, splitProgress);\n      const leftY = lerp(height / 2, bubbleHeight / 2 + 20, splitProgress);\n      drawChatBubble(leftX, leftY, bubbleWidth, bubbleHeight, gradient, splitProgress, true);\n\n      // Right thought bubble\n      const rightX = lerp(width / 2, width - bubbleWidth / 2 - 20, splitProgress);\n      const rightY = lerp(height / 2, bubbleHeight / 2 + 20, splitProgress);\n      drawThoughtBubble(rightX, rightY, bubbleWidth, bubbleHeight, gradient, splitProgress);\n      ctx.restore();\n    }\n    function drawChatBubble(x, y, width, height, gradient, progress, isLeft) {\n      ctx.save();\n      ctx.translate(x, y);\n      const cornerRadius = 20;\n      const tailSize = 20;\n      ctx.beginPath();\n      ctx.moveTo(-width / 2 + cornerRadius, -height / 2);\n      ctx.arcTo(width / 2, -height / 2, width / 2, height / 2, cornerRadius);\n      ctx.arcTo(width / 2, height / 2, -width / 2, height / 2, cornerRadius);\n      ctx.arcTo(-width / 2, height / 2, -width / 2, -height / 2, cornerRadius);\n      ctx.arcTo(-width / 2, -height / 2, width / 2, -height / 2, cornerRadius);\n\n      // Draw tail\n      ctx.moveTo(-width / 2 + tailSize, height / 2);\n      ctx.lineTo(-width / 2 - tailSize, height / 2 + tailSize);\n      ctx.lineTo(-width / 2 + tailSize * 2, height / 2);\n      ctx.closePath();\n      ctx.fillStyle = gradient;\n      ctx.globalAlpha = 0.6 * progress;\n      ctx.fill();\n\n      // Draw message\n      if (progress > 0.8 && leftChatMessage) {\n        ctx.font = '16px Arial';\n        ctx.fillStyle = 'black';\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.globalAlpha = (progress - 0.8) * 5; // Fade in text\n        wrapText(ctx, leftChatMessage, -width / 2 + 10, 0, width - 20, 20);\n      }\n      ctx.restore();\n    }\n    function drawThoughtBubble(x, y, width, height, gradient, progress) {\n      ctx.save();\n      ctx.translate(x, y);\n      const cornerRadius = 20;\n      const circleCount = 3;\n\n      // Main bubble\n      ctx.beginPath();\n      ctx.moveTo(-width / 2 + cornerRadius, -height / 2);\n      ctx.arcTo(width / 2, -height / 2, width / 2, height / 2, cornerRadius);\n      ctx.arcTo(width / 2, height / 2, -width / 2, height / 2, cornerRadius);\n      ctx.arcTo(-width / 2, height / 2, -width / 2, -height / 2, cornerRadius);\n      ctx.arcTo(-width / 2, -height / 2, width / 2, -height / 2, cornerRadius);\n      ctx.closePath();\n      ctx.fillStyle = gradient;\n      ctx.globalAlpha = 0.6 * progress;\n      ctx.fill();\n\n      // Thought circles\n      for (let i = 0; i < circleCount; i++) {\n        const circleSize = 10 - i * 2;\n        const circleX = width / 2 + 15 + i * 15;\n        const circleY = height / 2 + 15 + i * 15;\n        ctx.beginPath();\n        ctx.arc(circleX, circleY, circleSize, 0, Math.PI * 2);\n        ctx.fillStyle = gradient;\n        ctx.globalAlpha = 0.6 * progress;\n        ctx.fill();\n      }\n      ctx.restore();\n    }\n    function wrapText(context, text, x, y, maxWidth, lineHeight) {\n      const words = text.split(' ');\n      let line = '';\n      for (let n = 0; n < words.length; n++) {\n        const testLine = line + words[n] + ' ';\n        const metrics = context.measureText(testLine);\n        const testWidth = metrics.width;\n        if (testWidth > maxWidth && n > 0) {\n          context.fillText(line, x, y);\n          line = words[n] + ' ';\n          y += lineHeight;\n        } else {\n          line = testLine;\n        }\n      }\n      context.fillText(line, x, y);\n    }\n    function lerp(start, end, t) {\n      return start * (1 - t) + end * t;\n    }\n    function updateParticles() {\n      particles.current = particles.current.filter(p => p.opacity > 0 && p.size > 0);\n      particles.current.forEach(p => {\n        p.x += p.vx;\n        p.y += p.vy;\n        p.opacity -= 0.01;\n        p.size = Math.max(0, p.size - 0.05);\n      });\n    }\n    function drawParticles() {\n      particles.current.forEach(p => {\n        if (p.size > 0) {\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\n          ctx.fillStyle = `rgba(126, 34, 206, ${p.opacity})`;\n          ctx.fill();\n        }\n      });\n    }\n    function updateWhispers() {\n      const now = Date.now();\n      whispers.current = whispers.current.filter(w => w.opacity > 0 || now - w.createdAt < 12000);\n      whispers.current.forEach(w => {\n        const age = now - w.createdAt;\n        if (age < 5000) {\n          w.opacity = age / 5000; // Fade in over 5 seconds\n        } else if (age > 7000) {\n          w.opacity = Math.max(0, 0.2 - (age - 7000) / 5000); // Fade out after 7 seconds\n        } else {\n          w.opacity = 0.2; // Full opacity\n        }\n      });\n    }\n    function drawWhispers() {\n      ctx.font = 'bold 24px \"Orbitron\"';\n      ctx.textAlign = 'center';\n      whispers.current.forEach(w => {\n        ctx.fillStyle = `rgba(0, 0, 0, ${w.opacity})`;\n        ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 2;\n        ctx.shadowBlur = 3;\n        ctx.fillText(w.text, w.x, w.y);\n        ctx.shadowColor = 'transparent';\n      });\n    }\n    function animate(time) {\n      ctx.clearRect(0, 0, width, height);\n      drawBackground();\n      drawOrb(time / 1000);\n      updateParticles();\n      drawParticles();\n      updateWhispers();\n      drawWhispers();\n      if (isSplit && splitProgress < 1) {\n        setSplitProgress(prev => Math.min(prev + 0.005, 1));\n      } else if (!isSplit && splitProgress > 0) {\n        setSplitProgress(prev => Math.max(prev - 0.005, 0));\n      }\n      requestAnimationFrame(animate);\n    }\n    function handleMouseMove(event) {\n      const x = event.clientX;\n      const y = event.clientY;\n      const dx = x - width / 2;\n      const dy = y - height / 2;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < orbRadius) {\n        if (Math.random() < 0.02) {\n          whispers.current.push({\n            text: greetings[Math.floor(Math.random() * greetings.length)],\n            x: width / 2 + Math.random() * 200 - 100,\n            y: height / 2 + Math.random() * 200 - 100,\n            opacity: 0,\n            createdAt: Date.now()\n          });\n        }\n      }\n      if (Math.random() < 0.3) {\n        const angle = Math.random() * 2 * Math.PI;\n        const speed = 0.5 + Math.random() * 1;\n        particles.current.push({\n          x,\n          y,\n          vx: Math.cos(angle) * speed,\n          vy: Math.sin(angle) * speed,\n          opacity: 0.5,\n          size: 1 + Math.random() * 2\n        });\n      }\n    }\n    function handleClick(event) {\n      const x = event.clientX;\n      const y = event.clientY;\n      const dx = x - width / 2;\n      const dy = y - height / 2;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < orbRadius) {\n        setIsSplit(prev => !prev);\n        if (!isSplit) {\n          setLeftChatMessage(greetings[Math.floor(Math.random() * greetings.length)]);\n        }\n      }\n    }\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleClick);\n    requestAnimationFrame(animate);\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleClick);\n    };\n  }, [isSplit, splitProgress, leftChatMessage]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      display: 'block'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 10\n  }, this);\n};\n_s(EtherealOrb, \"YQnqTAKaC+AK0PyGtyZOtU5da9k=\");\n_c = EtherealOrb;\nexport default EtherealOrb;\nvar _c;\n$RefreshReg$(_c, \"EtherealOrb\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","EtherealOrb","_s","canvasRef","particles","whispers","isSplit","setIsSplit","splitProgress","setSplitProgress","leftChatMessage","setLeftChatMessage","canvas","current","ctx","getContext","width","height","orbRadius","greetings","resizeCanvas","window","innerWidth","innerHeight","createGradient","gradient","createRadialGradient","Math","max","addColorStop","drawBackground","fillStyle","fillRect","drawOrb","t","drawSplitOrb","drawWholeOrb","save","translate","beginPath","i","angle","PI","noise","sin","r","x","cos","y","moveTo","lineTo","closePath","globalAlpha","fill","restore","bubbleWidth","bubbleHeight","leftX","lerp","leftY","drawChatBubble","rightX","rightY","drawThoughtBubble","progress","isLeft","cornerRadius","tailSize","arcTo","font","textAlign","textBaseline","wrapText","circleCount","circleSize","circleX","circleY","arc","context","text","maxWidth","lineHeight","words","split","line","n","length","testLine","metrics","measureText","testWidth","fillText","start","end","updateParticles","filter","p","opacity","size","forEach","vx","vy","drawParticles","updateWhispers","now","Date","w","createdAt","age","drawWhispers","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","animate","time","clearRect","prev","min","requestAnimationFrame","handleMouseMove","event","clientX","clientY","dx","dy","distance","sqrt","random","push","floor","speed","handleClick","addEventListener","removeEventListener","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vtrav/Desktop/my-new-app/ethereal-violet-orb/src/EtherealOrb.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst EtherealOrb = () => {\r\n  const canvasRef = useRef(null);\r\n  const particles = useRef([]);\r\n  const whispers = useRef([]);\r\n  const [isSplit, setIsSplit] = useState(false);\r\n  const [splitProgress, setSplitProgress] = useState(0);\r\n  const [leftChatMessage, setLeftChatMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let width, height;\r\n    const orbRadius = 100;\r\n\r\n    const greetings = [\r\n      'Hey there!',\r\n      'Welcome, friend!',\r\n      'Hello, how are you?',\r\n      'Hi! Nice to meet you.',\r\n      'Greetings, earthling!',\r\n    ];\r\n\r\n    function resizeCanvas() {\r\n      width = window.innerWidth;\r\n      height = window.innerHeight;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n    }\r\n\r\n    function createGradient() {\r\n      const gradient = ctx.createRadialGradient(\r\n        width / 2,\r\n        height / 2,\r\n        0,\r\n        width / 2,\r\n        height / 2,\r\n        Math.max(width, height) / 2\r\n      );\r\n      gradient.addColorStop(0, '#ffffff');\r\n      gradient.addColorStop(0.7, '#f0f0f0');\r\n      gradient.addColorStop(1, '#e0e0e0');\r\n      return gradient;\r\n    }\r\n\r\n    function drawBackground() {\r\n      ctx.fillStyle = createGradient();\r\n      ctx.fillRect(0, 0, width, height);\r\n    }\r\n\r\n    function drawOrb(t) {\r\n      if (splitProgress > 0) {\r\n        drawSplitOrb(t);\r\n      } else {\r\n        drawWholeOrb(t);\r\n      }\r\n    }\r\n\r\n    function drawWholeOrb(t) {\r\n      ctx.save();\r\n      ctx.translate(width / 2, height / 2);\r\n\r\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\r\n      gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\r\n      gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\r\n      gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\r\n      gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\r\n\r\n      ctx.beginPath();\r\n      for (let i = 0; i < 360; i += 5) {\r\n        const angle = (i * Math.PI) / 180;\r\n        const noise = Math.sin(i * 0.05 + t) * 4;\r\n        const r = orbRadius + noise;\r\n        const x = Math.cos(angle) * r;\r\n        const y = Math.sin(angle) * r;\r\n        if (i === 0) ctx.moveTo(x, y);\r\n        else ctx.lineTo(x, y);\r\n      }\r\n      ctx.closePath();\r\n\r\n      ctx.fillStyle = gradient;\r\n      ctx.globalAlpha = 0.6;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n\r\n    function drawSplitOrb(t) {\r\n      ctx.save();\r\n\r\n      const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\r\n      gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\r\n      gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\r\n      gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\r\n      gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\r\n\r\n      const bubbleWidth = width * 0.3;\r\n      const bubbleHeight = height * 0.2;\r\n\r\n      // Left chat bubble\r\n      const leftX = lerp(width / 2, bubbleWidth / 2 + 20, splitProgress);\r\n      const leftY = lerp(height / 2, bubbleHeight / 2 + 20, splitProgress);\r\n      drawChatBubble(leftX, leftY, bubbleWidth, bubbleHeight, gradient, splitProgress, true);\r\n\r\n      // Right thought bubble\r\n      const rightX = lerp(width / 2, width - bubbleWidth / 2 - 20, splitProgress);\r\n      const rightY = lerp(height / 2, bubbleHeight / 2 + 20, splitProgress);\r\n      drawThoughtBubble(rightX, rightY, bubbleWidth, bubbleHeight, gradient, splitProgress);\r\n\r\n      ctx.restore();\r\n    }\r\n\r\n    function drawChatBubble(x, y, width, height, gradient, progress, isLeft) {\r\n      ctx.save();\r\n      ctx.translate(x, y);\r\n\r\n      const cornerRadius = 20;\r\n      const tailSize = 20;\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(-width / 2 + cornerRadius, -height / 2);\r\n      ctx.arcTo(width / 2, -height / 2, width / 2, height / 2, cornerRadius);\r\n      ctx.arcTo(width / 2, height / 2, -width / 2, height / 2, cornerRadius);\r\n      ctx.arcTo(-width / 2, height / 2, -width / 2, -height / 2, cornerRadius);\r\n      ctx.arcTo(-width / 2, -height / 2, width / 2, -height / 2, cornerRadius);\r\n\r\n      // Draw tail\r\n      ctx.moveTo(-width / 2 + tailSize, height / 2);\r\n      ctx.lineTo(-width / 2 - tailSize, height / 2 + tailSize);\r\n      ctx.lineTo(-width / 2 + tailSize * 2, height / 2);\r\n\r\n      ctx.closePath();\r\n      ctx.fillStyle = gradient;\r\n      ctx.globalAlpha = 0.6 * progress;\r\n      ctx.fill();\r\n\r\n      // Draw message\r\n      if (progress > 0.8 && leftChatMessage) {\r\n        ctx.font = '16px Arial';\r\n        ctx.fillStyle = 'black';\r\n        ctx.textAlign = 'left';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.globalAlpha = (progress - 0.8) * 5; // Fade in text\r\n        wrapText(ctx, leftChatMessage, -width / 2 + 10, 0, width - 20, 20);\r\n      }\r\n\r\n      ctx.restore();\r\n    }\r\n\r\n    function drawThoughtBubble(x, y, width, height, gradient, progress) {\r\n      ctx.save();\r\n      ctx.translate(x, y);\r\n\r\n      const cornerRadius = 20;\r\n      const circleCount = 3;\r\n\r\n      // Main bubble\r\n      ctx.beginPath();\r\n      ctx.moveTo(-width / 2 + cornerRadius, -height / 2);\r\n      ctx.arcTo(width / 2, -height / 2, width / 2, height / 2, cornerRadius);\r\n      ctx.arcTo(width / 2, height / 2, -width / 2, height / 2, cornerRadius);\r\n      ctx.arcTo(-width / 2, height / 2, -width / 2, -height / 2, cornerRadius);\r\n      ctx.arcTo(-width / 2, -height / 2, width / 2, -height / 2, cornerRadius);\r\n      ctx.closePath();\r\n      ctx.fillStyle = gradient;\r\n      ctx.globalAlpha = 0.6 * progress;\r\n      ctx.fill();\r\n\r\n      // Thought circles\r\n      for (let i = 0; i < circleCount; i++) {\r\n        const circleSize = 10 - i * 2;\r\n        const circleX = width / 2 + 15 + i * 15;\r\n        const circleY = height / 2 + 15 + i * 15;\r\n        ctx.beginPath();\r\n        ctx.arc(circleX, circleY, circleSize, 0, Math.PI * 2);\r\n        ctx.fillStyle = gradient;\r\n        ctx.globalAlpha = 0.6 * progress;\r\n        ctx.fill();\r\n      }\r\n\r\n      ctx.restore();\r\n    }\r\n\r\n    function wrapText(context, text, x, y, maxWidth, lineHeight) {\r\n      const words = text.split(' ');\r\n      let line = '';\r\n\r\n      for (let n = 0; n < words.length; n++) {\r\n        const testLine = line + words[n] + ' ';\r\n        const metrics = context.measureText(testLine);\r\n        const testWidth = metrics.width;\r\n        if (testWidth > maxWidth && n > 0) {\r\n          context.fillText(line, x, y);\r\n          line = words[n] + ' ';\r\n          y += lineHeight;\r\n        } else {\r\n          line = testLine;\r\n        }\r\n      }\r\n      context.fillText(line, x, y);\r\n    }\r\n\r\n    function lerp(start, end, t) {\r\n      return start * (1 - t) + end * t;\r\n    }\r\n\r\n    function updateParticles() {\r\n      particles.current = particles.current.filter((p) => p.opacity > 0 && p.size > 0);\r\n      particles.current.forEach((p) => {\r\n        p.x += p.vx;\r\n        p.y += p.vy;\r\n        p.opacity -= 0.01;\r\n        p.size = Math.max(0, p.size - 0.05);\r\n      });\r\n    }\r\n\r\n    function drawParticles() {\r\n      particles.current.forEach((p) => {\r\n        if (p.size > 0) {\r\n          ctx.beginPath();\r\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\r\n          ctx.fillStyle = `rgba(126, 34, 206, ${p.opacity})`;\r\n          ctx.fill();\r\n        }\r\n      });\r\n    }\r\n\r\n    function updateWhispers() {\r\n      const now = Date.now();\r\n      whispers.current = whispers.current.filter((w) => w.opacity > 0 || (now - w.createdAt) < 12000);\r\n      whispers.current.forEach((w) => {\r\n        const age = now - w.createdAt;\r\n        if (age < 5000) {\r\n          w.opacity = age / 5000; // Fade in over 5 seconds\r\n        } else if (age > 7000) {\r\n          w.opacity = Math.max(0, 0.2 - (age - 7000) / 5000); // Fade out after 7 seconds\r\n        } else {\r\n          w.opacity = 0.2; // Full opacity\r\n        }\r\n      });\r\n    }\r\n\r\n    function drawWhispers() {\r\n      ctx.font = 'bold 24px \"Orbitron\"';\r\n      ctx.textAlign = 'center';\r\n      whispers.current.forEach((w) => {\r\n        ctx.fillStyle = `rgba(0, 0, 0, ${w.opacity})`;\r\n        ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\r\n        ctx.shadowOffsetX = 2;\r\n        ctx.shadowOffsetY = 2;\r\n        ctx.shadowBlur = 3;\r\n        ctx.fillText(w.text, w.x, w.y);\r\n        ctx.shadowColor = 'transparent';\r\n      });\r\n    }\r\n\r\n    function animate(time) {\r\n      ctx.clearRect(0, 0, width, height);\r\n      drawBackground();\r\n      drawOrb(time / 1000);\r\n      updateParticles();\r\n      drawParticles();\r\n      updateWhispers();\r\n      drawWhispers();\r\n\r\n      if (isSplit && splitProgress < 1) {\r\n        setSplitProgress(prev => Math.min(prev + 0.005, 1));\r\n      } else if (!isSplit && splitProgress > 0) {\r\n        setSplitProgress(prev => Math.max(prev - 0.005, 0));\r\n      }\r\n\r\n      requestAnimationFrame(animate);\r\n    }\r\n\r\n    function handleMouseMove(event) {\r\n      const x = event.clientX;\r\n      const y = event.clientY;\r\n\r\n      const dx = x - width / 2;\r\n      const dy = y - height / 2;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      if (distance < orbRadius) {\r\n        if (Math.random() < 0.02) {\r\n          whispers.current.push({\r\n            text: greetings[Math.floor(Math.random() * greetings.length)],\r\n            x: width / 2 + Math.random() * 200 - 100,\r\n            y: height / 2 + Math.random() * 200 - 100,\r\n            opacity: 0,\r\n            createdAt: Date.now(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (Math.random() < 0.3) {\r\n        const angle = Math.random() * 2 * Math.PI;\r\n        const speed = 0.5 + Math.random() * 1;\r\n        particles.current.push({\r\n          x,\r\n          y,\r\n          vx: Math.cos(angle) * speed,\r\n          vy: Math.sin(angle) * speed,\r\n          opacity: 0.5,\r\n          size: 1 + Math.random() * 2,\r\n        });\r\n      }\r\n    }\r\n\r\n    function handleClick(event) {\r\n      const x = event.clientX;\r\n      const y = event.clientY;\r\n      const dx = x - width / 2;\r\n      const dy = y - height / 2;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      if (distance < orbRadius) {\r\n        setIsSplit(prev => !prev);\r\n        if (!isSplit) {\r\n          setLeftChatMessage(greetings[Math.floor(Math.random() * greetings.length)]);\r\n        }\r\n      }\r\n    }\r\n\r\n    resizeCanvas();\r\n    window.addEventListener('resize', resizeCanvas);\r\n    canvas.addEventListener('mousemove', handleMouseMove);\r\n    canvas.addEventListener('click', handleClick);\r\n\r\n    requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeCanvas);\r\n      canvas.removeEventListener('mousemove', handleMouseMove);\r\n      canvas.removeEventListener('click', handleClick);\r\n    };\r\n  }, [isSplit, splitProgress, leftChatMessage]);\r\n\r\n  return <canvas ref={canvasRef} style={{ width: '100%', height: '100%', display: 'block' }} />;\r\n};\r\n\r\nexport default EtherealOrb;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}