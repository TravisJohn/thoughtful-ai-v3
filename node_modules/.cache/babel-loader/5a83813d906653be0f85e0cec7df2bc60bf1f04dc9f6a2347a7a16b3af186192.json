{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtrav\\\\Desktop\\\\my-new-app\\\\ethereal-violet-orb\\\\src\\\\components\\\\EtherealOrb\\\\index.js\",\n  _s = $RefreshSig$();\n// File: src/components/EtherealOrb/index.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useCanvas } from './hooks/useCanvas';\nimport { useParticles } from './hooks/useParticles';\nimport { useWhispers } from './hooks/useWhispers';\nimport { drawBackground, drawOrb } from './utils/drawing';\nimport { handleMouseMove, handleClick } from './utils/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EtherealOrb = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isSplit, setIsSplit] = useState(false);\n  const [splitProgress, setSplitProgress] = useState(0);\n  const [leftChatMessage, setLeftChatMessage] = useState('');\n  const {\n    width,\n    height\n  } = useCanvas(canvasRef);\n  const {\n    particles,\n    addParticle,\n    updateParticles,\n    drawParticles\n  } = useParticles();\n  const {\n    whispers,\n    updateWhispers,\n    drawWhispers\n  } = useWhispers();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    function animate(time) {\n      ctx.clearRect(0, 0, width, height);\n      drawBackground(ctx, width, height);\n      drawOrb(ctx, width, height, time / 1000, splitProgress, leftChatMessage);\n      updateParticles();\n      drawParticles(ctx);\n      updateWhispers();\n      drawWhispers(ctx, width, height);\n      if (isSplit && splitProgress < 1) {\n        setSplitProgress(prev => Math.min(prev + 0.0002, 1));\n      } else if (!isSplit && splitProgress > 0) {\n        setSplitProgress(prev => Math.max(prev - 0.0002, 0));\n      }\n      requestAnimationFrame(animate);\n    }\n    const handleMouseMoveEvent = event => handleMouseMove(event, width, height, addParticle, whispers);\n    const handleClickEvent = event => handleClick(event, width, height, setIsSplit, setLeftChatMessage);\n    canvas.addEventListener('mousemove', handleMouseMoveEvent);\n    canvas.addEventListener('click', handleClickEvent);\n    requestAnimationFrame(animate);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMoveEvent);\n      canvas.removeEventListener('click', handleClickEvent);\n    };\n  }, [width, height, isSplit, splitProgress, leftChatMessage, addParticle, particles, whispers, updateParticles, drawParticles, updateWhispers, drawWhispers]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      display: 'block'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n_s(EtherealOrb, \"X95ipiKjxpU8g9i6r0hCYKNy5ZI=\", false, function () {\n  return [useCanvas, useParticles, useWhispers];\n});\n_c = EtherealOrb;\nexport default EtherealOrb;\nvar _c;\n$RefreshReg$(_c, \"EtherealOrb\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCanvas","useParticles","useWhispers","drawBackground","drawOrb","handleMouseMove","handleClick","jsxDEV","_jsxDEV","EtherealOrb","_s","canvasRef","isSplit","setIsSplit","splitProgress","setSplitProgress","leftChatMessage","setLeftChatMessage","width","height","particles","addParticle","updateParticles","drawParticles","whispers","updateWhispers","drawWhispers","canvas","current","ctx","getContext","animate","time","clearRect","prev","Math","min","max","requestAnimationFrame","handleMouseMoveEvent","event","handleClickEvent","addEventListener","removeEventListener","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vtrav/Desktop/my-new-app/ethereal-violet-orb/src/components/EtherealOrb/index.js"],"sourcesContent":["// File: src/components/EtherealOrb/index.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useCanvas } from './hooks/useCanvas';\r\nimport { useParticles } from './hooks/useParticles';\r\nimport { useWhispers } from './hooks/useWhispers';\r\nimport { drawBackground, drawOrb } from './utils/drawing';\r\nimport { handleMouseMove, handleClick } from './utils/interaction';\r\n\r\nconst EtherealOrb = () => {\r\n  const canvasRef = useRef(null);\r\n  const [isSplit, setIsSplit] = useState(false);\r\n  const [splitProgress, setSplitProgress] = useState(0);\r\n  const [leftChatMessage, setLeftChatMessage] = useState('');\r\n\r\n  const { width, height } = useCanvas(canvasRef);\r\n  const { particles, addParticle, updateParticles, drawParticles } = useParticles();\r\n  const { whispers, updateWhispers, drawWhispers } = useWhispers();\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    function animate(time) {\r\n      ctx.clearRect(0, 0, width, height);\r\n      drawBackground(ctx, width, height);\r\n      drawOrb(ctx, width, height, time / 1000, splitProgress, leftChatMessage);\r\n      updateParticles();\r\n      drawParticles(ctx);\r\n      updateWhispers();\r\n      drawWhispers(ctx, width, height);\r\n\r\n      if (isSplit && splitProgress < 1) {\r\n        setSplitProgress(prev => Math.min(prev + 0.0002, 1));\r\n      } else if (!isSplit && splitProgress > 0) {\r\n        setSplitProgress(prev => Math.max(prev - 0.0002, 0));\r\n      }\r\n\r\n      requestAnimationFrame(animate);\r\n    }\r\n\r\n    const handleMouseMoveEvent = (event) => handleMouseMove(event, width, height, addParticle, whispers);\r\n    const handleClickEvent = (event) => handleClick(event, width, height, setIsSplit, setLeftChatMessage);\r\n\r\n    canvas.addEventListener('mousemove', handleMouseMoveEvent);\r\n    canvas.addEventListener('click', handleClickEvent);\r\n\r\n    requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('mousemove', handleMouseMoveEvent);\r\n      canvas.removeEventListener('click', handleClickEvent);\r\n    };\r\n  }, [width, height, isSplit, splitProgress, leftChatMessage, addParticle, particles, whispers, updateParticles, drawParticles, updateWhispers, drawWhispers]);\r\n\r\n  return <canvas ref={canvasRef} style={{ width: '100%', height: '100%', display: 'block' }} />;\r\n};\r\n\r\nexport default EtherealOrb;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}