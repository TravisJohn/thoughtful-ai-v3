{"ast":null,"code":"// File: src/components/EtherealOrb/utils/drawing.js\nconst orbRadius = 100;\nexport function drawBackground(ctx, width, height) {\n  const gradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, Math.max(width, height) / 2);\n  gradient.addColorStop(0, '#ffffff');\n  gradient.addColorStop(0.7, '#f0f0f0');\n  gradient.addColorStop(1, '#e0e0e0');\n  ctx.fillStyle = gradient;\n  ctx.fillRect(0, 0, width, height);\n}\nexport function drawOrb(ctx, width, height, time, splitProgress, leftChatMessage) {\n  if (splitProgress > 0) {\n    drawSplitOrb(ctx, width, height, time, splitProgress, leftChatMessage);\n  } else {\n    drawWholeOrb(ctx, width, height, time);\n  }\n}\nfunction drawWholeOrb(ctx, width, height, t) {\n  ctx.save();\n  ctx.translate(width / 2, height / 2);\n  const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\n  gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\n  gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\n  gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\n  gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\n  ctx.beginPath();\n  for (let i = 0; i < 360; i += 5) {\n    const angle = i * Math.PI / 180;\n    const noise = Math.sin(i * 0.05 + t) * 4;\n    const r = orbRadius + noise;\n    const x = Math.cos(angle) * r;\n    const y = Math.sin(angle) * r;\n    if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n  }\n  ctx.closePath();\n  ctx.fillStyle = gradient;\n  ctx.globalAlpha = 0.6;\n  ctx.fill();\n  ctx.restore();\n}\nfunction drawSplitOrb(ctx, width, height, t, splitProgress, leftChatMessage) {\n  ctx.save();\n  const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\n  gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\n  gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\n  gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\n  gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\n  const bubbleWidth = lerp(width * 0.2, width * 0.3, splitProgress);\n  const bubbleHeight = lerp(height * 0.15, height * 0.2, splitProgress);\n\n  // Left chat bubble\n  const leftX = lerp(width / 2, bubbleWidth / 2 + 20, splitProgress);\n  const leftY = lerp(height / 2, bubbleHeight / 2 + 20, splitProgress);\n  drawChatBubble(ctx, leftX, leftY, bubbleWidth, bubbleHeight, gradient, splitProgress, true, leftChatMessage);\n\n  // Right thought bubble\n  const rightX = lerp(width / 2, width - bubbleWidth / 2 - 20, splitProgress);\n  const rightY = lerp(height / 2, bubbleHeight / 2 + 20, splitProgress);\n  drawThoughtBubble(ctx, rightX, rightY, bubbleWidth, bubbleHeight, gradient, splitProgress);\n  ctx.restore();\n}\nfunction drawChatBubble(x, y, width, height, gradient, progress, isLeft) {\n  ctx.save();\n  ctx.translate(x, y);\n  const cornerRadius = 20;\n  const tailSize = 20;\n  ctx.beginPath();\n  ctx.moveTo(-width / 2 + cornerRadius, -height / 2);\n  ctx.arcTo(width / 2, -height / 2, width / 2, height / 2, cornerRadius);\n  ctx.arcTo(width / 2, height / 2, -width / 2, height / 2, cornerRadius);\n  ctx.arcTo(-width / 2, height / 2, -width / 2, -height / 2, cornerRadius);\n  ctx.arcTo(-width / 2, -height / 2, width / 2, -height / 2, cornerRadius);\n\n  // Draw tail\n  ctx.moveTo(-width / 2 + tailSize, height / 2);\n  ctx.lineTo(-width / 2 - tailSize, height / 2 + tailSize);\n  ctx.lineTo(-width / 2 + tailSize * 2, height / 2);\n  ctx.closePath();\n  ctx.fillStyle = gradient;\n  ctx.globalAlpha = 0.6 * progress;\n  ctx.fill();\n\n  // Draw message\n  if (progress > 0.8 && leftChatMessage) {\n    ctx.font = '16px Arial';\n    ctx.fillStyle = 'black';\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.globalAlpha = (progress - 0.8) * 5; // Fade in text\n    wrapText(ctx, leftChatMessage, -width / 2 + 10, 0, width - 20, 20);\n  }\n  ctx.restore();\n}\nfunction drawThoughtBubble(x, y, width, height, gradient, progress) {\n  ctx.save();\n  ctx.translate(x, y);\n  const cornerRadius = 20;\n  const circleCount = 3;\n\n  // Main bubble\n  ctx.beginPath();\n  ctx.moveTo(-width / 2 + cornerRadius, -height / 2);\n  ctx.arcTo(width / 2, -height / 2, width / 2, height / 2, cornerRadius);\n  ctx.arcTo(width / 2, height / 2, -width / 2, height / 2, cornerRadius);\n  ctx.arcTo(-width / 2, height / 2, -width / 2, -height / 2, cornerRadius);\n  ctx.arcTo(-width / 2, -height / 2, width / 2, -height / 2, cornerRadius);\n  ctx.closePath();\n  ctx.fillStyle = gradient;\n  ctx.globalAlpha = 0.6 * progress;\n  ctx.fill();\n\n  // Thought circles\n  for (let i = 0; i < circleCount; i++) {\n    const circleSize = 10 - i * 2;\n    const circleX = width / 2 + 15 + i * 15;\n    const circleY = height / 2 + 15 + i * 15;\n    ctx.beginPath();\n    ctx.arc(circleX, circleY, circleSize, 0, Math.PI * 2);\n    ctx.fillStyle = gradient;\n    ctx.globalAlpha = 0.6 * progress;\n    ctx.fill();\n  }\n  ctx.restore();\n}\nfunction lerp(start, end, t) {\n  return start * (1 - t) + end * t;\n}","map":{"version":3,"names":["orbRadius","drawBackground","ctx","width","height","gradient","createRadialGradient","Math","max","addColorStop","fillStyle","fillRect","drawOrb","time","splitProgress","leftChatMessage","drawSplitOrb","drawWholeOrb","t","save","translate","beginPath","i","angle","PI","noise","sin","r","x","cos","y","moveTo","lineTo","closePath","globalAlpha","fill","restore","bubbleWidth","lerp","bubbleHeight","leftX","leftY","drawChatBubble","rightX","rightY","drawThoughtBubble","progress","isLeft","cornerRadius","tailSize","arcTo","font","textAlign","textBaseline","wrapText","circleCount","circleSize","circleX","circleY","arc","start","end"],"sources":["C:/Users/vtrav/Desktop/my-new-app/ethereal-violet-orb/src/components/EtherealOrb/utils/drawing.js"],"sourcesContent":["// File: src/components/EtherealOrb/utils/drawing.js\r\nconst orbRadius = 100;\r\n\r\nexport function drawBackground(ctx, width, height) {\r\n  const gradient = ctx.createRadialGradient(\r\n    width / 2,\r\n    height / 2,\r\n    0,\r\n    width / 2,\r\n    height / 2,\r\n    Math.max(width, height) / 2\r\n  );\r\n  gradient.addColorStop(0, '#ffffff');\r\n  gradient.addColorStop(0.7, '#f0f0f0');\r\n  gradient.addColorStop(1, '#e0e0e0');\r\n  ctx.fillStyle = gradient;\r\n  ctx.fillRect(0, 0, width, height);\r\n}\r\n\r\nexport function drawOrb(ctx, width, height, time, splitProgress, leftChatMessage) {\r\n  if (splitProgress > 0) {\r\n    drawSplitOrb(ctx, width, height, time, splitProgress, leftChatMessage);\r\n  } else {\r\n    drawWholeOrb(ctx, width, height, time);\r\n  }\r\n}\r\n\r\nfunction drawWholeOrb(ctx, width, height, t) {\r\n  ctx.save();\r\n  ctx.translate(width / 2, height / 2);\r\n\r\n  const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\r\n  gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\r\n  gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\r\n  gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\r\n  gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\r\n\r\n  ctx.beginPath();\r\n  for (let i = 0; i < 360; i += 5) {\r\n    const angle = (i * Math.PI) / 180;\r\n    const noise = Math.sin(i * 0.05 + t) * 4;\r\n    const r = orbRadius + noise;\r\n    const x = Math.cos(angle) * r;\r\n    const y = Math.sin(angle) * r;\r\n    if (i === 0) ctx.moveTo(x, y);\r\n    else ctx.lineTo(x, y);\r\n  }\r\n  ctx.closePath();\r\n\r\n  ctx.fillStyle = gradient;\r\n  ctx.globalAlpha = 0.6;\r\n  ctx.fill();\r\n  ctx.restore();\r\n}\r\n\r\nfunction drawSplitOrb(ctx, width, height, t, splitProgress, leftChatMessage) {\r\n  ctx.save();\r\n\r\n  const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, orbRadius);\r\n  gradient.addColorStop(0, 'rgba(147, 51, 234, 0.4)');\r\n  gradient.addColorStop(0.4, 'rgba(126, 34, 206, 0.3)');\r\n  gradient.addColorStop(0.8, 'rgba(107, 33, 168, 0.2)');\r\n  gradient.addColorStop(1, 'rgba(88, 28, 135, 0.1)');\r\n\r\n  const bubbleWidth = lerp(width * 0.2, width * 0.3, splitProgress);\r\n  const bubbleHeight = lerp(height * 0.15, height * 0.2, splitProgress);\r\n\r\n  // Left chat bubble\r\n  const leftX = lerp(width / 2, bubbleWidth / 2 + 20, splitProgress);\r\n  const leftY = lerp(height / 2, bubbleHeight / 2 + 20, splitProgress);\r\n  drawChatBubble(ctx, leftX, leftY, bubbleWidth, bubbleHeight, gradient, splitProgress, true, leftChatMessage);\r\n\r\n  // Right thought bubble\r\n  const rightX = lerp(width / 2, width - bubbleWidth / 2 - 20, splitProgress);\r\n  const rightY = lerp(height / 2, bubbleHeight / 2 + 20, splitProgress);\r\n  drawThoughtBubble(ctx, rightX, rightY, bubbleWidth, bubbleHeight, gradient, splitProgress);\r\n\r\n  ctx.restore();\r\n}\r\n\r\nfunction drawChatBubble(x, y, width, height, gradient, progress, isLeft) {\r\n  ctx.save();\r\n  ctx.translate(x, y);\r\n\r\n  const cornerRadius = 20;\r\n  const tailSize = 20;\r\n\r\n  ctx.beginPath();\r\n  ctx.moveTo(-width / 2 + cornerRadius, -height / 2);\r\n  ctx.arcTo(width / 2, -height / 2, width / 2, height / 2, cornerRadius);\r\n  ctx.arcTo(width / 2, height / 2, -width / 2, height / 2, cornerRadius);\r\n  ctx.arcTo(-width / 2, height / 2, -width / 2, -height / 2, cornerRadius);\r\n  ctx.arcTo(-width / 2, -height / 2, width / 2, -height / 2, cornerRadius);\r\n\r\n  // Draw tail\r\n  ctx.moveTo(-width / 2 + tailSize, height / 2);\r\n  ctx.lineTo(-width / 2 - tailSize, height / 2 + tailSize);\r\n  ctx.lineTo(-width / 2 + tailSize * 2, height / 2);\r\n\r\n  ctx.closePath();\r\n  ctx.fillStyle = gradient;\r\n  ctx.globalAlpha = 0.6 * progress;\r\n  ctx.fill();\r\n\r\n  // Draw message\r\n  if (progress > 0.8 && leftChatMessage) {\r\n    ctx.font = '16px Arial';\r\n    ctx.fillStyle = 'black';\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.globalAlpha = (progress - 0.8) * 5; // Fade in text\r\n    wrapText(ctx, leftChatMessage, -width / 2 + 10, 0, width - 20, 20);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nfunction drawThoughtBubble(x, y, width, height, gradient, progress) {\r\n  ctx.save();\r\n  ctx.translate(x, y);\r\n\r\n  const cornerRadius = 20;\r\n  const circleCount = 3;\r\n\r\n  // Main bubble\r\n  ctx.beginPath();\r\n  ctx.moveTo(-width / 2 + cornerRadius, -height / 2);\r\n  ctx.arcTo(width / 2, -height / 2, width / 2, height / 2, cornerRadius);\r\n  ctx.arcTo(width / 2, height / 2, -width / 2, height / 2, cornerRadius);\r\n  ctx.arcTo(-width / 2, height / 2, -width / 2, -height / 2, cornerRadius);\r\n  ctx.arcTo(-width / 2, -height / 2, width / 2, -height / 2, cornerRadius);\r\n  ctx.closePath();\r\n  ctx.fillStyle = gradient;\r\n  ctx.globalAlpha = 0.6 * progress;\r\n  ctx.fill();\r\n\r\n  // Thought circles\r\n  for (let i = 0; i < circleCount; i++) {\r\n    const circleSize = 10 - i * 2;\r\n    const circleX = width / 2 + 15 + i * 15;\r\n    const circleY = height / 2 + 15 + i * 15;\r\n    ctx.beginPath();\r\n    ctx.arc(circleX, circleY, circleSize, 0, Math.PI * 2);\r\n    ctx.fillStyle = gradient;\r\n    ctx.globalAlpha = 0.6 * progress;\r\n    ctx.fill();\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nfunction lerp(start, end, t) {\r\n  return start * (1 - t) + end * t;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}