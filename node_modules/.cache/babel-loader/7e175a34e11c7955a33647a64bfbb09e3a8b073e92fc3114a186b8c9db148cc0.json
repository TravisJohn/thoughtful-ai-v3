{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { handleMouseMove, handleClick } from '../utils/interaction';\nexport const useEventListeners = (canvasRef, width, height, setState, addParticle, whispers) => {\n  _s();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const handleMouseMoveEvent = event => handleMouseMove(event, width, height, addParticle, whispers);\n    const handleClickEvent = event => {\n      handleClick(event, width, height, isSplit => {\n        setState(prev => ({\n          ...prev,\n          isSplit,\n          heroTextOpacity: isSplit ? prev.heroTextOpacity : 1\n        }));\n      }, leftChatMessage => {\n        setState(prev => ({\n          ...prev,\n          leftChatMessage\n        }));\n      });\n    };\n    canvas.addEventListener('mousemove', handleMouseMoveEvent);\n    canvas.addEventListener('click', handleClickEvent);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMoveEvent);\n      canvas.removeEventListener('click', handleClickEvent);\n    };\n  }, [canvasRef, width, height, setState, addParticle, whispers]);\n};\n_s(useEventListeners, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","handleMouseMove","handleClick","useEventListeners","canvasRef","width","height","setState","addParticle","whispers","_s","canvas","current","handleMouseMoveEvent","event","handleClickEvent","isSplit","prev","heroTextOpacity","leftChatMessage","addEventListener","removeEventListener"],"sources":["C:/Users/vtrav/Desktop/my-new-app/ethereal-violet-orb/src/components/EtherealOrb/hooks/useEventListeners.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { handleMouseMove, handleClick } from '../utils/interaction';\r\n\r\nexport const useEventListeners = (canvasRef, width, height, setState, addParticle, whispers) => {\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n\r\n    const handleMouseMoveEvent = (event) => handleMouseMove(event, width, height, addParticle, whispers);\r\n    const handleClickEvent = (event) => {\r\n      handleClick(event, width, height, (isSplit) => {\r\n        setState(prev => ({ \r\n          ...prev, \r\n          isSplit,\r\n          heroTextOpacity: isSplit ? prev.heroTextOpacity : 1\r\n        }));\r\n      }, (leftChatMessage) => {\r\n        setState(prev => ({ ...prev, leftChatMessage }));\r\n      });\r\n    };\r\n\r\n    canvas.addEventListener('mousemove', handleMouseMoveEvent);\r\n    canvas.addEventListener('click', handleClickEvent);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('mousemove', handleMouseMoveEvent);\r\n      canvas.removeEventListener('click', handleClickEvent);\r\n    };\r\n  }, [canvasRef, width, height, setState, addParticle, whispers]);\r\n};"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,eAAe,EAAEC,WAAW,QAAQ,sBAAsB;AAEnE,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EAC9FV,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAGP,SAAS,CAACQ,OAAO;IAEhC,MAAMC,oBAAoB,GAAIC,KAAK,IAAKb,eAAe,CAACa,KAAK,EAAET,KAAK,EAAEC,MAAM,EAAEE,WAAW,EAAEC,QAAQ,CAAC;IACpG,MAAMM,gBAAgB,GAAID,KAAK,IAAK;MAClCZ,WAAW,CAACY,KAAK,EAAET,KAAK,EAAEC,MAAM,EAAGU,OAAO,IAAK;QAC7CT,QAAQ,CAACU,IAAI,KAAK;UAChB,GAAGA,IAAI;UACPD,OAAO;UACPE,eAAe,EAAEF,OAAO,GAAGC,IAAI,CAACC,eAAe,GAAG;QACpD,CAAC,CAAC,CAAC;MACL,CAAC,EAAGC,eAAe,IAAK;QACtBZ,QAAQ,CAACU,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAEE;QAAgB,CAAC,CAAC,CAAC;MAClD,CAAC,CAAC;IACJ,CAAC;IAEDR,MAAM,CAACS,gBAAgB,CAAC,WAAW,EAAEP,oBAAoB,CAAC;IAC1DF,MAAM,CAACS,gBAAgB,CAAC,OAAO,EAAEL,gBAAgB,CAAC;IAElD,OAAO,MAAM;MACXJ,MAAM,CAACU,mBAAmB,CAAC,WAAW,EAAER,oBAAoB,CAAC;MAC7DF,MAAM,CAACU,mBAAmB,CAAC,OAAO,EAAEN,gBAAgB,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAACX,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,CAAC,CAAC;AACjE,CAAC;AAACC,EAAA,CAzBWP,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}