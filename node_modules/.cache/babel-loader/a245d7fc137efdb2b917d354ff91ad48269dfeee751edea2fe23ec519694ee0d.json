{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtrav\\\\Desktop\\\\my-new-app\\\\ethereal-violet-orb\\\\src\\\\EtherealOrb.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EtherealOrb = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const particles = useRef([]);\n  const whispers = useRef([]);\n  const [isSplit, setIsSplit] = useState(false);\n  const [splitProgress, setSplitProgress] = useState(0);\n  const [leftChatMessage, setLeftChatMessage] = useState('');\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let width, height;\n    const orbRadius = 100;\n    const greetings = ['Hey there!', 'Welcome, friend!', 'Hello, how are you?', 'Hi! Nice to meet you.', 'Greetings, earthling!'];\n    function resizeCanvas() {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      canvas.width = width;\n      canvas.height = height;\n    }\n\n    // ... (keep all the previously defined functions)\n\n    function updateParticles() {\n      particles.current = particles.current.filter(p => p.opacity > 0 && p.size > 0);\n      particles.current.forEach(p => {\n        p.x += p.vx;\n        p.y += p.vy;\n        p.opacity -= 0.01;\n        p.size = Math.max(0, p.size - 0.05);\n      });\n    }\n    function drawParticles() {\n      particles.current.forEach(p => {\n        if (p.size > 0) {\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\n          ctx.fillStyle = `rgba(126, 34, 206, ${p.opacity})`;\n          ctx.fill();\n        }\n      });\n    }\n    function updateWhispers() {\n      const now = Date.now();\n      whispers.current = whispers.current.filter(w => w.opacity > 0 || now - w.createdAt < 12000);\n      whispers.current.forEach(w => {\n        const age = now - w.createdAt;\n        if (age < 5000) {\n          w.opacity = age / 5000; // Fade in over 5 seconds\n        } else if (age > 7000) {\n          w.opacity = Math.max(0, 0.2 - (age - 7000) / 5000); // Fade out after 7 seconds\n        } else {\n          w.opacity = 0.2; // Full opacity\n        }\n      });\n    }\n    function drawWhispers() {\n      ctx.font = 'bold 24px \"Orbitron\"';\n      ctx.textAlign = 'center';\n      whispers.current.forEach(w => {\n        ctx.fillStyle = `rgba(0, 0, 0, ${w.opacity})`;\n        ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\n        ctx.shadowOffsetX = 2;\n        ctx.shadowOffsetY = 2;\n        ctx.shadowBlur = 3;\n        ctx.fillText(w.text, w.x, w.y);\n        ctx.shadowColor = 'transparent';\n      });\n    }\n    function animate(time) {\n      ctx.clearRect(0, 0, width, height);\n      drawBackground();\n      drawOrb(time / 1000);\n      updateParticles();\n      drawParticles();\n      updateWhispers();\n      drawWhispers();\n      if (isSplit && splitProgress < 1) {\n        setSplitProgress(prev => Math.min(prev + 0.005, 1));\n      } else if (!isSplit && splitProgress > 0) {\n        setSplitProgress(prev => Math.max(prev - 0.005, 0));\n      }\n      requestAnimationFrame(animate);\n    }\n    function handleMouseMove(event) {\n      const x = event.clientX;\n      const y = event.clientY;\n      const dx = x - width / 2;\n      const dy = y - height / 2;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < orbRadius) {\n        if (Math.random() < 0.02) {\n          whispers.current.push({\n            text: greetings[Math.floor(Math.random() * greetings.length)],\n            x: width / 2 + Math.random() * 200 - 100,\n            y: height / 2 + Math.random() * 200 - 100,\n            opacity: 0,\n            createdAt: Date.now()\n          });\n        }\n      }\n      if (Math.random() < 0.3) {\n        const angle = Math.random() * 2 * Math.PI;\n        const speed = 0.5 + Math.random() * 1;\n        particles.current.push({\n          x,\n          y,\n          vx: Math.cos(angle) * speed,\n          vy: Math.sin(angle) * speed,\n          opacity: 0.5,\n          size: 1 + Math.random() * 2\n        });\n      }\n    }\n    function handleClick(event) {\n      const x = event.clientX;\n      const y = event.clientY;\n      const dx = x - width / 2;\n      const dy = y - height / 2;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < orbRadius) {\n        setIsSplit(prev => !prev);\n        if (!isSplit) {\n          setLeftChatMessage(greetings[Math.floor(Math.random() * greetings.length)]);\n        }\n      }\n    }\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleClick);\n    requestAnimationFrame(animate);\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleClick);\n    };\n  }, [isSplit, splitProgress, leftChatMessage]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      display: 'block'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 10\n  }, this);\n};\n_s(EtherealOrb, \"YQnqTAKaC+AK0PyGtyZOtU5da9k=\");\n_c = EtherealOrb;\nexport default EtherealOrb;\nvar _c;\n$RefreshReg$(_c, \"EtherealOrb\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","EtherealOrb","_s","canvasRef","particles","whispers","isSplit","setIsSplit","splitProgress","setSplitProgress","leftChatMessage","setLeftChatMessage","canvas","current","ctx","getContext","width","height","orbRadius","greetings","resizeCanvas","window","innerWidth","innerHeight","updateParticles","filter","p","opacity","size","forEach","x","vx","y","vy","Math","max","drawParticles","beginPath","arc","PI","fillStyle","fill","updateWhispers","now","Date","w","createdAt","age","drawWhispers","font","textAlign","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","fillText","text","animate","time","clearRect","drawBackground","drawOrb","prev","min","requestAnimationFrame","handleMouseMove","event","clientX","clientY","dx","dy","distance","sqrt","random","push","floor","length","angle","speed","cos","sin","handleClick","addEventListener","removeEventListener","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vtrav/Desktop/my-new-app/ethereal-violet-orb/src/EtherealOrb.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst EtherealOrb = () => {\r\n  const canvasRef = useRef(null);\r\n  const particles = useRef([]);\r\n  const whispers = useRef([]);\r\n  const [isSplit, setIsSplit] = useState(false);\r\n  const [splitProgress, setSplitProgress] = useState(0);\r\n  const [leftChatMessage, setLeftChatMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let width, height;\r\n    const orbRadius = 100;\r\n\r\n    const greetings = [\r\n      'Hey there!',\r\n      'Welcome, friend!',\r\n      'Hello, how are you?',\r\n      'Hi! Nice to meet you.',\r\n      'Greetings, earthling!',\r\n    ];\r\n\r\n    function resizeCanvas() {\r\n      width = window.innerWidth;\r\n      height = window.innerHeight;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n    }\r\n\r\n    // ... (keep all the previously defined functions)\r\n\r\n    function updateParticles() {\r\n      particles.current = particles.current.filter((p) => p.opacity > 0 && p.size > 0);\r\n      particles.current.forEach((p) => {\r\n        p.x += p.vx;\r\n        p.y += p.vy;\r\n        p.opacity -= 0.01;\r\n        p.size = Math.max(0, p.size - 0.05);\r\n      });\r\n    }\r\n\r\n    function drawParticles() {\r\n      particles.current.forEach((p) => {\r\n        if (p.size > 0) {\r\n          ctx.beginPath();\r\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\r\n          ctx.fillStyle = `rgba(126, 34, 206, ${p.opacity})`;\r\n          ctx.fill();\r\n        }\r\n      });\r\n    }\r\n\r\n    function updateWhispers() {\r\n      const now = Date.now();\r\n      whispers.current = whispers.current.filter((w) => w.opacity > 0 || (now - w.createdAt) < 12000);\r\n      whispers.current.forEach((w) => {\r\n        const age = now - w.createdAt;\r\n        if (age < 5000) {\r\n          w.opacity = age / 5000; // Fade in over 5 seconds\r\n        } else if (age > 7000) {\r\n          w.opacity = Math.max(0, 0.2 - (age - 7000) / 5000); // Fade out after 7 seconds\r\n        } else {\r\n          w.opacity = 0.2; // Full opacity\r\n        }\r\n      });\r\n    }\r\n\r\n    function drawWhispers() {\r\n      ctx.font = 'bold 24px \"Orbitron\"';\r\n      ctx.textAlign = 'center';\r\n      whispers.current.forEach((w) => {\r\n        ctx.fillStyle = `rgba(0, 0, 0, ${w.opacity})`;\r\n        ctx.shadowColor = 'rgba(255, 255, 255, 0.5)';\r\n        ctx.shadowOffsetX = 2;\r\n        ctx.shadowOffsetY = 2;\r\n        ctx.shadowBlur = 3;\r\n        ctx.fillText(w.text, w.x, w.y);\r\n        ctx.shadowColor = 'transparent';\r\n      });\r\n    }\r\n\r\n    function animate(time) {\r\n      ctx.clearRect(0, 0, width, height);\r\n      drawBackground();\r\n      drawOrb(time / 1000);\r\n      updateParticles();\r\n      drawParticles();\r\n      updateWhispers();\r\n      drawWhispers();\r\n\r\n      if (isSplit && splitProgress < 1) {\r\n        setSplitProgress(prev => Math.min(prev + 0.005, 1));\r\n      } else if (!isSplit && splitProgress > 0) {\r\n        setSplitProgress(prev => Math.max(prev - 0.005, 0));\r\n      }\r\n\r\n      requestAnimationFrame(animate);\r\n    }\r\n\r\n    function handleMouseMove(event) {\r\n      const x = event.clientX;\r\n      const y = event.clientY;\r\n\r\n      const dx = x - width / 2;\r\n      const dy = y - height / 2;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      if (distance < orbRadius) {\r\n        if (Math.random() < 0.02) {\r\n          whispers.current.push({\r\n            text: greetings[Math.floor(Math.random() * greetings.length)],\r\n            x: width / 2 + Math.random() * 200 - 100,\r\n            y: height / 2 + Math.random() * 200 - 100,\r\n            opacity: 0,\r\n            createdAt: Date.now(),\r\n          });\r\n        }\r\n      }\r\n\r\n      if (Math.random() < 0.3) {\r\n        const angle = Math.random() * 2 * Math.PI;\r\n        const speed = 0.5 + Math.random() * 1;\r\n        particles.current.push({\r\n          x,\r\n          y,\r\n          vx: Math.cos(angle) * speed,\r\n          vy: Math.sin(angle) * speed,\r\n          opacity: 0.5,\r\n          size: 1 + Math.random() * 2,\r\n        });\r\n      }\r\n    }\r\n\r\n    function handleClick(event) {\r\n      const x = event.clientX;\r\n      const y = event.clientY;\r\n      const dx = x - width / 2;\r\n      const dy = y - height / 2;\r\n      const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n      if (distance < orbRadius) {\r\n        setIsSplit(prev => !prev);\r\n        if (!isSplit) {\r\n          setLeftChatMessage(greetings[Math.floor(Math.random() * greetings.length)]);\r\n        }\r\n      }\r\n    }\r\n\r\n    resizeCanvas();\r\n    window.addEventListener('resize', resizeCanvas);\r\n    canvas.addEventListener('mousemove', handleMouseMove);\r\n    canvas.addEventListener('click', handleClick);\r\n\r\n    requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeCanvas);\r\n      canvas.removeEventListener('mousemove', handleMouseMove);\r\n      canvas.removeEventListener('click', handleClick);\r\n    };\r\n  }, [isSplit, splitProgress, leftChatMessage]);\r\n\r\n  return <canvas ref={canvasRef} style={{ width: '100%', height: '100%', display: 'block' }} />;\r\n};\r\n\r\nexport default EtherealOrb;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}